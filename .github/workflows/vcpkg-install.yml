name: test

on:
  push:
    branches:
      - '*' 
  pull_request:
    branches: [ main ]

env:
  SDK_VERSION: v24.09.07

jobs:
  vcpkg:
    runs-on: windows-2022

    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4.1.1

    - name: Check for existing cache
      id: cache_status
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}\vcpkg_installed
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}

    - name: Install vcpkg
      if: steps.cache_status.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        git checkout 2024.09.30
        .\bootstrap-vcpkg.bat  && cd ../

    - name: Install dependencies
      if: steps.cache_status.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        ${{ github.workspace }}\vcpkg\vcpkg.exe install --x-install-root ${{ github.workspace }}\vcpkg_installed

    - name: Cache dependencies
      if: steps.cache_status.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}\vcpkg_installed
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }} 

    - name: Create zip archive for gstreamer
      run: |
        Copy-Item -Recurse ${{ github.workspace }}\vcpkg_installed\x64-windows\bin ${{ github.workspace }}\sensing-dev-gstreamer\bin
        Copy-Item -Recurse ${{ github.workspace }}\vcpkg_installed\x64-windows\lib ${{ github.workspace }}\sensing-dev-gstreamer\lib
        Copy-Item -Recurse ${{ github.workspace }}\vcpkg_installed\x64-windows\include ${{ github.workspace }}\sensing-dev-gstreamer\include
        Compress-Archive -Path ${{ github.workspace }}\sensing-dev-gstreamer -DestinationPath ${{ github.workspace }}\gstreamer-win64.zip

    - name: Create zip archive for gst-plugins
      run: |
        Copy-Item -Recurse ${{ github.workspace }}\vcpkg_installed\x64-windows\plugins\gstreamer ${{ github.workspace }}\sensing-dev-gst-plugins\lib\gstreamer-1.0
        Compress-Archive -Path ${{ github.workspace }}\sensing-dev-gst-plugins -DestinationPath ${{ github.workspace }}\gst-plugins-win64.zip
 
    - name: Create zip archive for tools
      run: |
        Copy-Item -Recurse ${{ github.workspace }}\vcpkg_installed\x64-windows\tools\gstreamer ${{ github.workspace }}\sensing-dev-gst-tools\bin
        Compress-Archive -Path ${{ github.workspace }}\sensing-dev-gst-tools -DestinationPath ${{ github.workspace }}\gst-tools-win64.zip

    - name: Upload gst-plugins
      uses: actions/upload-artifact@v4
      with:
        name: artifact-vcpkg-installed-items
        path: |
          ${{ github.workspace }}/check_opencv_with_gstreamer.py
          ${{ github.workspace }}/gst-plugins-win64.zip
          ${{ github.workspace }}/gst-tools-win64.zip
          ${{ github.workspace }}/gstreamer-win64.zip

  test-to-install-opencv-python-windows:
    runs-on: windows-2022
    needs: [vcpkg]
    env:
      CMAKE_ARGS: "-DWITH_GSTREAMER=ON"

    steps:

    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        name: artifact-vcpkg-installed-items
        path: download

    - name: Extract gstreamer
      run: |
        Expand-Archive -Path ${{ github.workspace }}/download/gstreamer-win64.zip -DestinationPath .


    - name: Check extracted gstreamer archive content 1
      id: check_gstreamer_content
      uses: andstor/file-existence-action@v3
      with:
        files: "${{ github.workspace }}/sensing-dev-gstreamer/bin, ${{ github.workspace }}/sensing-dev-gstreamer/lib, ${{ github.workspace }}/sensing-dev-gstreamer/include"
        fail: true

    - name: Check extracted gstreamer archive content 2
      id: check_test_file
      uses: andstor/file-existence-action@v3
      with:
        files: "${{ github.workspace }}/download/check_opencv_with_gstreamer.py"
        fail: true

    - name: Install OpenCV with gstreamer with vcpkg_installed
      shell: cmd
      run: |
        set GSTREAMER_ROOT_X86=${{ github.workspace }}\sensing-dev-gstreamer
        set PATH=%GSTREAMER_ROOT_X86%\lib\glib-2.0\include;%GSTREAMER_ROOT_X86%\lib;%GSTREAMER_ROOT_X86%\include\glib-2.0;%GSTREAMER_ROOT_X86%\include\gstreamer-1.0;%PATH%
        pip install numpy==2.1.1
        pip3 install --no-binary opencv-python opencv-python==4.10.0.84 --verbose 
        
    - name: Remove build-time dependencies
      run: |
         Remove-Item -Recurse -Force ${{ github.workspace }}\sensing-dev-gstreamer

    - name: Install Sensing-Dev
      run: |
        Invoke-WebRequest -Uri https://github.com/Sensing-Dev/sensing-dev-installer/releases/download/${{ env.SDK_VERSION }}/installer.ps1 -OutFile installer.ps1 -Verbose
        powershell.exe -ExecutionPolicy Bypass -File ./installer.ps1 -user $env:USERNAME -version ${{ env.SDK_VERSION }}
        echo 'SENSING_DEV_ROOT=$env:SENSING_DEV_ROOT' >> $GITHUB_ENV

    - name: Test if opencv-python is built with gstreamer
      run: |
        $SENSING_DEV_ROOT= [Environment]::GetEnvironmentVariable("SENSING_DEV_ROOT", "User")
        $GST_SENSING_DEV = Join-Path -Path $SENSING_DEV_ROOT -ChildPath "bin"
        cd ${{ github.workspace }}\download
        python check_opencv_with_gstreamer.py $GST_SENSING_DEV
        if ($LASTEXITCODE -eq 0) {
            Write-Output "PASSED python test"
        } else {
            Write-Output "FAILED GST python test"
            exit 1
        }

  test-to-install-opencv-python-linux:
    runs-on: ubuntu-22.04
    env:
      CMAKE_ARGS: "-DWITH_GSTREAMER=ON"

    steps:

    - name: Install gstreamer
      run: |
        sudo apt-get update
        sudo apt-get install libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio -y

    - name: Install OpenCV
      run: |
        pip3 install numpy
        pip3 install --no-binary opencv-python opencv-python==4.10.0.84 --verbose

    - name: Checkout Repository
      uses: actions/checkout@v4.1.1

    - name: Test if opencv-python is built with gstreamer
      run: |
        python check_opencv_with_gstreamer.py